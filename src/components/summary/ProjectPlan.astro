---
interface PlanData {
  price: string;
  dataUsage: {
    current: number;
    max: number;
  };
  cms: {
    current: number;
    max: number;
  };
  analytics: string;
}

interface Props {
  planData: PlanData;
}

const { planData } = Astro.props;
const dataUsagePercent = (planData.dataUsage.current / planData.dataUsage.max) * 100;
---

<div class="plan">
  <ul class="plan_list">
    <li class="plan_item">
      <p class="plan_label">料金</p>
      <div class="plan_contents">
        <p class="plan_text">
          <strong class="strong">{planData.price}</strong>
        </p>
        <div class="plan_bar">
          <span class="plan_bar_elem"></span>
        </div>
      </div>
    </li>
    <li class="plan_item">
      <p class="plan_label">データ使用量</p>
      <div class="plan_contents">
        <p class="plan_text">
          <strong class="strong">{planData.dataUsage.current}</strong>
          <span>GB</span>
        </p>
        <div class="plan_bar">
          <span class="plan_bar_elem" style={`width: ${dataUsagePercent}%`}></span>
        </div>
      </div>
    </li>
    <li class="plan_item">
      <p class="plan_label">CMS</p>
      <div class="plan_contents">
        <p class="plan_text">
          <strong class="strong">{planData.cms.current}</strong>
          <span>/</span>
          <span>{planData.cms.max}</span>
        </p>
      </div>
    </li>
    <li class="plan_item">
      <p class="plan_label">アナリティクス</p>
      <div class="plan_contents">
        <p class="plan_text">
          <strong class="strong">{planData.analytics}</strong>
        </p>
      </div>
    </li>
  </ul>
  <div class="box_btn_wrapper">
    <button class="box_btn_primary">アップグレード</button>
  </div>
</div>

<style lang="scss">
  .plan{
    display: flex;
    align-items: center;
    padding-top: 16px;
    margin-top: 16px;
    border-top: 1px solid var(--main-border-color);

    &_list{
      height: 96px;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 16px;
      flex: 1;
    }

    &_item{
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 12px;
      background-color: var(--item-bg-color);
      border: 1px solid var(--main-border-color);
      border-radius: var(--border-radius-m);
    }

    &_label{
      font-size: var(--font-size-xs);
      color: var(--sub-font-color);
    }

    &_contents{
      width: 100%;
      display: flex;
      flex: 1;
      gap: 12px;
      margin-top: 12px;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    &_text{
      font-size: var(--font-size-xs);
      color: var(--main-font-color);
      >.strong{
        font-weight: 500;
        font-size: var(--font-size-s);
      }
    }

    &_bar{
      position: relative;
      width: 100%;
      height: 8px;
      background-color: var(--elem-bg-color);
      border-radius: 100px;
      &_elem{
        position: absolute;
        width: 30%;
        height: 100%;
        background-color: var(--accent2-bg-color);
        border-radius: 100px;
        z-index: 10;
      }
    }
  }

  .box_btn{
    &_wrapper{
      display: flex;
      flex-direction: column;
      gap: 12px;
    }

    &_primary{
      align-self: flex-end;
      padding: 12px 16px;
      border-radius: var(--border-radius-m);
      font-size: var(--font-size-xxs);
      color: var(--main-font-color);
      background-color: var(--accent-bg-color);
    }
  }
</style> 