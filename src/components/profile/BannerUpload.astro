---
interface Props {
  projectId: string;
  bannerUrl?: string;
}

const { projectId, bannerUrl } = Astro.props;
---

<div class="banner-section">
  <h3 class="section-title">バナー画像</h3>
  
  <div class="banner-upload">
    <div id="banner-preview" class="banner-preview" style={bannerUrl ? `background-image: url('${bannerUrl}')` : ''}>
      {!bannerUrl && (
        <div class="upload-icon">
          <svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M19 3H5C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M8.5 10C9.32843 10 10 9.32843 10 8.5C10 7.67157 9.32843 7 8.5 7C7.67157 7 7 7.67157 7 8.5C7 9.32843 7.67157 10 8.5 10Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M21 15L16 10L5 21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
      )}
    </div>
    
    <div class="banner-actions">
      <form id="banner-form" enctype="multipart/form-data">
        <input type="hidden" name="projectId" value={projectId}>
        <input type="file" id="banner-input" name="banner" class="file-input" accept="image/*">
        <div class="banner-buttons">
          <label for="banner-input" class="upload-btn">画像を選択</label>
          <button type="submit" id="banner-submit" class="submit-btn" disabled>アップロード</button>
        </div>
        <p class="help-text">推奨サイズ: 1200 × 300px</p>
      </form>
    </div>
  </div>
</div>

<script define:vars={{ projectId }}>
document.addEventListener('DOMContentLoaded', () => {
  const bannerForm = document.getElementById('banner-form');
  const bannerInput = document.getElementById('banner-input');
  const bannerSubmit = document.getElementById('banner-submit');
  const bannerPreview = document.getElementById('banner-preview');
  
  if (bannerInput && bannerSubmit && bannerPreview) {
    // 画像選択時のプレビュー表示
    bannerInput.addEventListener('change', (e) => {
      const file = e.target.files[0];
      
      if (file) {
        // アップロードボタンを有効化
        bannerSubmit.removeAttribute('disabled');
        
        // プレビュー表示
        const reader = new FileReader();
        reader.onload = (e) => {
          bannerPreview.style.backgroundImage = `url('${e.target.result}')`;
          bannerPreview.innerHTML = ''; // アイコンを非表示
        };
        reader.readAsDataURL(file);
      } else {
        // ファイルが選択されていなければボタンを無効化
        bannerSubmit.setAttribute('disabled', 'disabled');
      }
    });
  }
  
  if (bannerForm) {
    // フォーム送信処理
    bannerForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(bannerForm);
      
      try {
        const response = await fetch('/api/upload-banner', {
          method: 'POST',
          body: formData
        });
        
        if (!response.ok) {
          throw new Error('バナー画像のアップロードに失敗しました');
        }
        
        const data = await response.json();
        
        if (data.success) {
          // アップロード後にページをリロード
          window.location.reload();
        } else {
          alert(data.message || 'バナー画像のアップロードに失敗しました');
        }
      } catch (error) {
        console.error('バナーアップロードエラー:', error);
        alert('バナー画像のアップロードに失敗しました。再度お試しください。');
      }
    });
  }
});
</script>

<style>
.banner-section {
  margin-bottom: 24px;
}

.section-title {
  font-size: var(--font-size-m);
  margin-bottom: 16px;
  color: var(--main-font-color);
}

.banner-upload {
  background-color: var(--item-bg-color);
  border: 1px solid var(--main-border-color);
  border-radius: var(--border-radius-m);
  padding: 16px;
}

.banner-preview {
  width: 100%;
  height: 200px;
  background-color: var(--sub-bg-color);
  background-size: cover;
  background-position: center;
  border-radius: var(--border-radius-s);
  margin-bottom: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--sub-font-color);
}

.upload-icon {
  opacity: 0.6;
}

.banner-actions {
  display: flex;
  flex-direction: column;
}

.file-input {
  display: none;
}

.banner-buttons {
  display: flex;
  gap: 12px;
  margin-bottom: 8px;
}

.upload-btn {
  display: inline-block;
  padding: 8px 16px;
  background-color: var(--btn-bg-color);
  color: var(--main-font-color);
  border-radius: var(--border-radius-m);
  cursor: pointer;
  font-size: var(--font-size-xs);
  text-align: center;
}

.submit-btn {
  padding: 8px 16px;
  background-color: var(--accent-bg-color);
  color: white;
  border-radius: var(--border-radius-m);
  font-size: var(--font-size-xs);
}

.submit-btn[disabled] {
  background-color: var(--disabled-bg-color);
  color: var(--disabled-font-color);
  cursor: not-allowed;
}

.help-text {
  font-size: var(--font-size-xs);
  color: var(--sub-font-color);
  margin-top: 8px;
}
</style> 