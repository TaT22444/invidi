<!-- ---
interface SnsLink {
  type: string;
  name: string;
  description?: string;
}

interface Props {
  projectId: string;
  snsLinks?: SnsLink[];
}

const { projectId, snsLinks = [] } = Astro.props;
---

<div class="sns-section">
  <h3 class="section-title">SNSリンク</h3>
  
  <div id="sns-items" class="sns-items">
    {snsLinks.map((link, index) => (
      <div class="sns-item" data-index={index}>
        <div class="sns-icon">
          {link.type === 'instagram' && (
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z" fill="currentColor"/>
            </svg>
          )}
          {link.type === 'twitter' && (
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z" fill="currentColor" stroke="currentColor" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          )}
          {link.type === 'youtube' && (
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z" fill="currentColor"/>
              <polygon points="9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02" fill="var(--sub-bg-color)"/>
            </svg>
          )}
          {link.type === 'facebook' && (
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z" fill="currentColor" stroke="currentColor" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          )}
        </div>
        <div class="sns-info">
          <div class="sns-name">{link.name}</div>
          {link.description && <div class="sns-description">{link.description}</div>}
        </div>
        <button class="sns-delete-btn" data-index={index}>
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M3 6H5H21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M8 6V4C8 3.46957 8.21071 2.96086 8.58579 2.58579C8.96086 2.21071 9.46957 2 10 2H14C14.5304 2 15.0391 2.21071 15.4142 2.58579C15.7893 2.96086 16 3.46957 16 4V6M19 6V20C19 20.5304 18.7893 21.0391 18.4142 21.4142C18.0391 21.7893 17.5304 22 17 22H7C6.46957 22 5.96086 21.7893 5.58579 21.4142C5.21071 21.0391 5 20.5304 5 20V6H19Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>
    ))}
  </div>
  
  <div class="sns-form">
    <h4 class="sns-form-title">SNSリンクを追加</h4>
    <div class="sns-form-group">
      <label for="sns-type">タイプ</label>
      <select id="sns-type" class="sns-input">
        <option value="instagram">Instagram</option>
        <option value="twitter">Twitter</option>
        <option value="youtube">YouTube</option>
        <option value="facebook">Facebook</option>
      </select>
    </div>
    <div class="sns-form-group">
      <label for="sns-name">アカウント名</label>
      <input type="text" id="sns-name" class="sns-input" placeholder="@example">
    </div>
    <div class="sns-form-group">
      <label for="sns-description">説明（任意）</label>
      <input type="text" id="sns-description" class="sns-input" placeholder="説明を入力">
    </div>
    <button class="sns-add-btn" id="add-sns-btn">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 5V19" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M5 12H19" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
      <span>追加する</span>
    </button>
  </div>
</div>

<script define:vars={{ projectId }}>
document.addEventListener('DOMContentLoaded', () => {
  const addSnsBtn = document.getElementById('add-sns-btn');
  const snsTypeInput = document.getElementById('sns-type');
  const snsNameInput = document.getElementById('sns-name');
  const snsDescInput = document.getElementById('sns-description');
  const snsItems = document.getElementById('sns-items');
  
  // SNSリンク追加ボタンのイベント
  if (addSnsBtn && snsTypeInput && snsNameInput && snsDescInput) {
    addSnsBtn.addEventListener('click', async () => {
      const snsType = snsTypeInput.value;
      const snsName = snsNameInput.value.trim();
      const snsDescription = snsDescInput.value.trim();
      
      if (!snsName) {
        alert('アカウント名を入力してください');
        return;
      }
      
      try {
        const response = await fetch('/api/add-sns', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            projectId,
            snsType,
            snsName,
            snsDescription
          })
        });
        
        if (!response.ok) {
          throw new Error('SNSリンクの追加に失敗しました');
        }
        
        const data = await response.json();
        
        if (data.success) {
          // 成功したら画面を更新（今回はリロード）
          window.location.reload();
        } else {
          alert(data.message || 'SNSリンクの追加に失敗しました');
        }
      } catch (error) {
        console.error('SNSリンク追加エラー:', error);
        alert('SNSリンクの追加に失敗しました。再度お試しください。');
      }
    });
  }
  
  // SNS削除ボタンのイベント
  if (snsItems) {
    snsItems.addEventListener('click', async (e) => {
      const deleteBtn = e.target.closest('.sns-delete-btn');
      if (deleteBtn) {
        const snsIndex = deleteBtn.dataset.index;
        if (confirm('このSNSリンクを削除しますか？')) {
          try {
            const response = await fetch('/api/remove-sns', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                projectId,
                snsIndex
              })
            });
            
            if (!response.ok) {
              throw new Error('SNSリンクの削除に失敗しました');
            }
            
            const data = await response.json();
            
            if (data.success) {
              // 成功したら画面を更新（今回はリロード）
              window.location.reload();
            } else {
              alert(data.message || 'SNSリンクの削除に失敗しました');
            }
          } catch (error) {
            console.error('SNSリンク削除エラー:', error);
            alert('SNSリンクの削除に失敗しました。再度お試しください。');
          }
        }
      }
    });
  }
});
</script>

<style>
.sns-section {
  margin-bottom: 24px;
}

.section-title {
  font-size: var(--font-size-m);
  margin-bottom: 16px;
  color: var(--main-font-color);
}

.sns-items {
  margin-bottom: 24px;
}

.sns-item {
  display: flex;
  align-items: center;
  padding: 12px;
  background-color: var(--item-bg-color);
  border: 1px solid var(--main-border-color);
  border-radius: var(--border-radius-m);
  margin-bottom: 8px;
}

.sns-icon {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: var(--btn-bg-color);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 12px;
  color: var(--main-font-color);
}

.sns-info {
  flex: 1;
}

.sns-name {
  font-size: var(--font-size-s);
  font-weight: 500;
  color: var(--main-font-color);
}

.sns-description {
  font-size: var(--font-size-xs);
  color: var(--sub-font-color);
  margin-top: 4px;
}

.sns-delete-btn {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--danger-color);
  background-color: transparent;
}

.sns-delete-btn:hover {
  background-color: var(--danger-bg-color);
}

.sns-form {
  background-color: var(--item-bg-color);
  border: 1px solid var(--main-border-color);
  border-radius: var(--border-radius-m);
  padding: 16px;
}

.sns-form-title {
  font-size: var(--font-size-s);
  color: var(--main-font-color);
  margin-bottom: 16px;
}

.sns-form-group {
  margin-bottom: 12px;
}

.sns-form-group label {
  display: block;
  font-size: var(--font-size-xs);
  color: var(--sub-font-color);
  margin-bottom: 4px;
}

.sns-input {
  width: 100%;
  padding: 8px 12px;
  border-radius: var(--border-radius-s);
  border: 1px solid var(--main-border-color);
  background-color: var(--sub-bg-color);
  color: var(--main-font-color);
  font-size: var(--font-size-xs);
}

.sns-add-btn {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  background-color: var(--accent-bg-color);
  color: white;
  border-radius: var(--border-radius-m);
  font-size: var(--font-size-xs);
  margin-top: 8px;
}
</style>  -->